scale_y_continuous(breaks=c(0.0,0.1,0.2))+
geom_hline(data=dummy,aes(yintercept=intercept),linetype="dashed")+
theme_classic()+
theme(axis.title.y=element_blank())
s_power=ggplot(out_smooth%>%filter(name=="Sensitivity"),
aes(x=SE, y=value,fill=Test))+
facet_grid(nullprop~aa,labeller = label_parsed)+
geom_bar(stat="identity", position=position_dodge()) +
scale_y_continuous(breaks=c(0.0,0.4))+
theme_classic()+
theme(axis.title.y=element_blank())
pdf("Compare.pdf",height=2.5,width=6)
print(compares)
dev.off()
pdf("Robustness_nullprop.pdf",height=3,width=6)
print(s_fdp)
dev.off()
dummy <- out%>%filter(name=="FDP",nullprop!=0)%>%mutate(intercept=alpha)
out_smooth <- out%>%filter(Test%in%c("DART"
,"BH"
,"FDRL II"),nullprop!=0)
s_fdp=ggplot(out_smooth%>%filter(name=="FDP"),
aes(x=SE, y=value,fill=Test))+
facet_grid(nullprop~aa,labeller = label_parsed)+
geom_bar(stat="identity", position=position_dodge()) +
scale_y_continuous(breaks=c(0.0,0.1,0.2))+
geom_hline(data=dummy,aes(yintercept=intercept),linetype="dashed")+
theme_classic()+
theme(axis.title.y=element_blank())
s_power=ggplot(out_smooth%>%filter(name=="Sensitivity"),
aes(x=SE, y=value,fill=Test))+
facet_grid(nullprop~aa,labeller = label_parsed)+
geom_bar(stat="identity", position=position_dodge()) +
scale_y_continuous(breaks=c(0.0,0.4))+
theme_classic()+
theme(axis.title.y=element_blank())
pdf("Compare.pdf",height=2.5,width=6)
print(compares)
dev.off()
pdf("Robustness_nullprop.pdf",height=3,width=6)
print(s_fdp)
dev.off()
4140/2736
44*13
44*4
6000
3700-450
3000*12
143000/12
100*8
setwd("/Users/xuechan/Documents/Study/Rotation-Jichun/Micro_data/DART_Selected_seq")
library(openxlsx)
library(dplyr)
library(phyloseq)
library(phangorn)
library(vegan)
library(survival)
library(ape)
library(cubature)
library(xtable)
library(ggplot2)
library(reshape2)
library(data.table)
source("../Find_grids.R")
load("../seqtab_20190626.RData")
load("taxtab_rdp_rc.RData")
library(dada2)
############ seqtab ################
## 1. Drop empty columns
summary(colSums(seqtab))
sum(colSums(seqtab)==0)
seqfilt <- as.matrix(seqtab)
dim(seqfilt)
## 2. Remove taxa that only seen in less than 5% of the samples.
seqfilt <- seqfilt[, colSums(seqfilt > 0) > (0.1*nrow(seqfilt))]
dim(seqfilt) # 1112,13042
setwd("/Users/xuechan/Documents/Study/Rotation-Jichun/Micro_data/DART_Selected_seq")
library(openxlsx)
library(dplyr)
library(phyloseq)
library(phangorn)
library(vegan)
library(survival)
library(ape)
library(cubature)
library(xtable)
library(ggplot2)
library(reshape2)
library(data.table)
source("../Find_grids.R")
load("../seqtab_20190626.RData")
load("taxtab_rdp_rc.RData")
library(dada2)
############ seqtab ################
## 1. Drop empty columns
summary(colSums(seqtab))
sum(colSums(seqtab)==0)
seqfilt <- as.matrix(seqtab)
dim(seqfilt)
0.1*nrow(seqfilt)
setwd("/Users/xuechan/Documents/Study/Rotation-Jichun/project_1/DART_Code_last/Simulation/Results")
rm(list=ls())
library(tidyverse)
library(dplyr)
library(ggplot2)
library('ggthemes')
library(ggh4x)
#### Sensitivity for M
load("Out_DART_diffM.RData")
out_DART <- data.frame(result_DART)%>%
rename(Sensitivity=Power,FDP=FDR)%>%
pivot_longer(cols=c("Sensitivity","FDP"))%>%
group_by(alpha,Layers,SE,M,name) %>%
summarize(
Upper=quantile(value,0.95,na.rm=TRUE),
Lower=quantile(value,0.05,na.rm=TRUE),
value=mean(value,na.rm=TRUE)) %>%
mutate(Test= ifelse(Layers==1,"BH",paste0(Layers," Layers")))%>%
mutate(Test=ifelse(Layers==max(Layers),"DART",Test))
head(out_DART)
colnames(out_DART)
load("Out_DART.RData")
load("Out_FDRL.RData")
out_FDRL <- out_FDRL%>%mutate(k1=floor(k))%>%
mutate(Test=ifelse(k1==k,"FDRL I","FDRL II"))
#  mutate(Test=ifelse(k1==k,paste0("FDRL I, k=", k1),
#                     paste0("FDRL II, k=", k1)))
out_DART0 <- out_DART
out <- out_DART0%>%filter(Layers!=2)%>%
mutate(Test=ifelse(Layers==1,"BH","DART"))%>%
bind_rows(out_FDRL)%>%
pivot_longer(cols=c("Sensitivity","FDP"))%>%
mutate(nullprop=as.character(nullprop),aa=paste0("alpha*'='*",alpha))
dummy0 <- out%>%filter(name=="FDP",nullprop==0)%>%mutate(intercept=alpha)
out0 <- out%>%filter(nullprop==0)
compares <- ggplot(out0,aes(x=SE, y=value,fill=Test))+
facet_grid(name~aa,labeller = label_parsed,scales="free")+
geom_bar(stat="identity", position=position_dodge()) +
geom_hline(data=dummy0,aes(yintercept=intercept),linetype="dashed")+
theme_classic()+
theme(axis.title.y=element_blank())
colnames(out)
load("Out_DART.RData")
load("Out_FDRL.RData")
out_FDRL <- out_FDRL%>%mutate(k1=floor(k))%>%
mutate(Test=ifelse(k1==k,"FDRL I","FDRL II"))
#  mutate(Test=ifelse(k1==k,paste0("FDRL I, k=", k1),
#                     paste0("FDRL II, k=", k1)))
out_DART0 <- out_DART
out <- out_DART0%>%filter(Layers!=2)%>%
mutate(Test=ifelse(Layers==1,"BH","DART"))%>%
bind_rows(out_FDRL)%>%
pivot_longer(cols=c("Sensitivity","FDP"))%>%
mutate(nullprop=as.character(nullprop),aa=paste0("alpha*'='*",alpha))
coonames(out)
colnames(out)
out$nullprop
load("Out_DART.RData")
load("Out_FDRL.RData")
out_FDRL <- out_FDRL%>%mutate(k1=floor(k))%>%
mutate(Test=ifelse(k1==k,"FDRL I","FDRL II"))
#  mutate(Test=ifelse(k1==k,paste0("FDRL I, k=", k1),
#                     paste0("FDRL II, k=", k1)))
out_DART0 <- out_DART
out <- out_DART0%>%filter(Layers!=2)%>%
mutate(Test=ifelse(Layers==1,"BH","DART"))%>%
bind_rows(out_FDRL)%>%
pivot_longer(cols=c("Sensitivity","FDP"))%>%
mutate(nullprop=paste0("tau*'='*",as.character(nullprop)),aa=paste0("alpha*'='*",alpha))
dummy0 <- out%>%filter(name=="FDP",nullprop==0)%>%mutate(intercept=alpha)
out0 <- out%>%filter(nullprop==0)
compares <- ggplot(out0,aes(x=SE, y=value,fill=Test))+
facet_grid(name~aa,labeller = label_parsed,scales="free")+
geom_bar(stat="identity", position=position_dodge()) +
geom_hline(data=dummy0,aes(yintercept=intercept),linetype="dashed")+
theme_classic()+
theme(axis.title.y=element_blank())
dummy <- out%>%filter(name=="FDP",nullprop!=0)%>%mutate(intercept=alpha)
out_smooth <- out%>%filter(Test%in%c("DART"
,"BH"
,"FDRL II"),nullprop!=0)
s_fdp=ggplot(out_smooth%>%filter(name=="FDP"),
aes(x=SE, y=value,fill=Test))+
facet_grid(nullprop~aa,labeller = label_parsed)+
geom_bar(stat="identity", position=position_dodge()) +
scale_y_continuous(breaks=c(0.0,0.1,0.2))+
geom_hline(data=dummy,aes(yintercept=intercept),linetype="dashed")+
theme_classic()+
theme(axis.title.y=element_blank())
s_power=ggplot(out_smooth%>%filter(name=="Sensitivity"),
aes(x=SE, y=value,fill=Test))+
facet_grid(nullprop~aa,labeller = label_parsed)+
geom_bar(stat="identity", position=position_dodge()) +
scale_y_continuous(breaks=c(0.0,0.4))+
theme_classic()+
theme(axis.title.y=element_blank())
pdf("Compare.pdf",height=2.5,width=6)
print(compares)
dev.off()
pdf("Robustness_nullprop.pdf",height=3,width=6)
print(s_fdp)
dev.off()
load("Out_DART.RData")
load("Out_FDRL.RData")
out_FDRL <- out_FDRL%>%mutate(k1=floor(k))%>%
mutate(Test=ifelse(k1==k,"FDRL I","FDRL II"))
#  mutate(Test=ifelse(k1==k,paste0("FDRL I, k=", k1),
#                     paste0("FDRL II, k=", k1)))
out_DART0 <- out_DART
out <- out_DART0%>%filter(Layers!=2)%>%
mutate(Test=ifelse(Layers==1,"BH","DART"))%>%
bind_rows(out_FDRL)%>%
pivot_longer(cols=c("Sensitivity","FDP"))%>%
mutate(nullprop0=nullprop)%>%
mutate(nullprop=paste0("tau*'='*",as.character(nullprop)),aa=paste0("alpha*'='*",alpha))
dummy0 <- out%>%filter(name=="FDP",nullprop0==0)%>%mutate(intercept=alpha)
out0 <- out%>%filter(nullprop0==0)
compares <- ggplot(out0,aes(x=SE, y=value,fill=Test))+
facet_grid(name~aa,labeller = label_parsed,scales="free")+
geom_bar(stat="identity", position=position_dodge()) +
geom_hline(data=dummy0,aes(yintercept=intercept),linetype="dashed")+
theme_classic()+
theme(axis.title.y=element_blank())
dummy <- out%>%filter(name=="FDP",nullprop!=0)%>%mutate(intercept=alpha)
out_smooth <- out%>%filter(Test%in%c("DART"
,"BH"
,"FDRL II"),nullprop!=0)
s_fdp=ggplot(out_smooth%>%filter(name=="FDP"),
aes(x=SE, y=value,fill=Test))+
facet_grid(nullprop~aa,labeller = label_parsed)+
geom_bar(stat="identity", position=position_dodge()) +
scale_y_continuous(breaks=c(0.0,0.1,0.2))+
geom_hline(data=dummy,aes(yintercept=intercept),linetype="dashed")+
theme_classic()+
theme(axis.title.y=element_blank())
s_power=ggplot(out_smooth%>%filter(name=="Sensitivity"),
aes(x=SE, y=value,fill=Test))+
facet_grid(nullprop~aa,labeller = label_parsed)+
geom_bar(stat="identity", position=position_dodge()) +
scale_y_continuous(breaks=c(0.0,0.4))+
theme_classic()+
theme(axis.title.y=element_blank())
pdf("Compare.pdf",height=2.5,width=6)
print(compares)
dev.off()
pdf("Robustness_nullprop.pdf",height=3,width=6)
print(s_fdp)
dev.off()
pdf("Robustness_nullprop.pdf",height=4,width=6)
print(s_fdp)
dev.off()
pdf("Robustness_nullprop.pdf",height=3.5,width=6)
print(s_fdp)
dev.off()
pdf("Robustness_nullprop.pdf",height=3.7,width=6)
print(s_fdp)
dev.off()
out_smooth <- out%>%filter(Test%in%c("DART"
,"BH"
,"FDRL II"),nullprop0!=0)
s_fdp=ggplot(out_smooth%>%filter(name=="FDP"),
aes(x=SE, y=value,fill=Test))+
facet_grid(nullprop~aa,labeller = label_parsed)+
geom_bar(stat="identity", position=position_dodge()) +
scale_y_continuous(breaks=c(0.0,0.1,0.2))+
geom_hline(data=dummy,aes(yintercept=intercept),linetype="dashed")+
theme_classic()+
theme(axis.title.y=element_blank())
pdf("Robustness_nullprop.pdf",height=3.7,width=6)
print(s_fdp)
dev.off()
dummy <- out%>%filter(name=="FDP",nullprop0!=0)%>%mutate(intercept=alpha)
out_smooth <- out%>%filter(Test%in%c("DART"
,"BH"
,"FDRL II"),nullprop0!=0)
s_fdp=ggplot(out_smooth%>%filter(name=="FDP"),
aes(x=SE, y=value,fill=Test))+
facet_grid(nullprop~aa,labeller = label_parsed)+
geom_bar(stat="identity", position=position_dodge()) +
scale_y_continuous(breaks=c(0.0,0.1,0.2))+
geom_hline(data=dummy,aes(yintercept=intercept),linetype="dashed")+
theme_classic()+
theme(axis.title.y=element_blank())
pdf("Robustness_nullprop.pdf",height=3.7,width=6)
print(s_fdp)
dev.off()
pdf("Robustness_nullprop.pdf",height=3,width=6)
print(s_fdp)
dev.off()
pdf("Robustness_nullprop.pdf",height=3.3,width=6)
print(s_fdp)
dev.off()
library(ape)
library(cubature)
library(foreach)
library(doParallel)
library("doRNG")
library(xtable)
library(tidyverse)
library("MASS")
library(survival)
source("../DART_function.R")
source("../FDRL_function.R")
getwd()
setwd("/Users/xuechan/Documents/Study/Rotation-Jichun/project_1/DART_Code_last/Simulation")
library(ape)
library(cubature)
library(foreach)
library(doParallel)
library("doRNG")
library(xtable)
library(tidyverse)
library("MASS")
library(survival)
source("../DART_function.R")
source("../FDRL_function.R")
# Generate tree and corresponding aggregation tree
set.seed(123)
ntip=1000;n=300
toy <- nodes.2D.simu(ntip)
# function to generate the hypotheses locations
nodes.2D.simu <- function(ntips){
d1 <- rnorm(ntips,0,2)
d2 <- runif(ntips,0,4)
return(cbind(d1,d2))
}
# Generate tree and corresponding aggregation tree
set.seed(123)
ntip=1000;n=300
toy <- nodes.2D.simu(ntip)
alphai=c(0.05,0.1,0.15,0.20)
sei=1:4
npi=c(0)
Mi=c(2:5)
grids <- list(c(76,96,110),c(56,96),c(16),c(12))
snm <- sqrt(n*log(ntip)*log(log(ntip)))
snm
c(76,96,110)/snm
c(56,96)/snm
16/snm
12/snm
# Generate tree and corresponding aggregation tree
set.seed(123)
ntip=1000;n=300
toy <- nodes.2D.simu(ntip)
Dist0 <- dist(toy)
str(Dist0)
Dist0 <- Dist <- as.matrix(dist(tree))
Dist0 <- Dist <- as.matrix(dist(toy))
str(Dist0)
#parameters set-up
b11 <- pmax(dnorm(Dist0[156,],0,0.8)*3.4-0.8,0)
b12 <- dnorm(Dist0[7,],0,0.05)*3
b13 <- -dnorm(Dist0[90,],0,0.15)*2
b1 <- (b11+b12)
b1[c(300,200,400,100,500,600,700,800,900,1000)] <- 10
beta1 <- ifelse(abs(b1)>0.15,b1,0)
sim(beta1!=0)
sim(beta1!=0)
sum(beta1!=0)
getwd()
setwd("/Users/xuechan/Documents/Study/Rotation-Jichun/project_1/DART_Code_last/Simulation/Results")
rm(list=ls())
library(tidyverse)
library(dplyr)
library(ggplot2)
library('ggthemes')
library(ggh4x)
load("Out_DART2.RData")
load("Out_FDRL2.RData")
out_FDRL <- out_FDRL%>%mutate(k1=floor(k))%>%
mutate(Test=ifelse(k1==k,"FDRL I","FDRL II"))
#  mutate(Test=ifelse(k1==k,paste0("FDRL I, k=", k1),
#                     paste0("FDRL II, k=", k1)))
out_DART0 <- out_DART
out <- out_DART0%>%filter(Layers!=2)%>%
mutate(Test=ifelse(Layers==1,"BH","DART"))%>%
bind_rows(out_FDRL)%>%
pivot_longer(cols=c("Sensitivity","FDP"))%>%
mutate(nullprop0=nullprop)%>%
mutate(nullprop=paste0("tau*'='*",as.character(nullprop)),aa=paste0("alpha*'='*",alpha))
dummy0 <- out%>%filter(name=="FDP",nullprop0==0)%>%mutate(intercept=alpha)
out0 <- out%>%filter(nullprop0==0)
compares <- ggplot(out0,aes(x=SE, y=value,fill=Test))+
facet_grid(name~aa,labeller = label_parsed,scales="free")+
geom_bar(stat="identity", position=position_dodge()) +
geom_hline(data=dummy0,aes(yintercept=intercept),linetype="dashed")+
theme_classic()+
theme(axis.title.y=element_blank())
dummy <- out%>%filter(name=="FDP",nullprop0!=0)%>%mutate(intercept=alpha)
out_smooth <- out%>%filter(Test%in%c("DART"
,"BH"
,"FDRL II"),nullprop0!=0)
s_fdp=ggplot(out_smooth%>%filter(name=="FDP"),
aes(x=SE, y=value,fill=Test))+
facet_grid(nullprop~aa,labeller = label_parsed)+
geom_bar(stat="identity", position=position_dodge()) +
scale_y_continuous(breaks=c(0.0,0.1,0.2))+
geom_hline(data=dummy,aes(yintercept=intercept),linetype="dashed")+
theme_classic()+
theme(axis.title.y=element_blank())
s_power=ggplot(out_smooth%>%filter(name=="Sensitivity"),
aes(x=SE, y=value,fill=Test))+
facet_grid(nullprop~aa,labeller = label_parsed)+
geom_bar(stat="identity", position=position_dodge()) +
scale_y_continuous(breaks=c(0.0,0.4))+
theme_classic()+
theme(axis.title.y=element_blank())
pdf("Compare.pdf",height=2.5,width=6)
print(compares)
dev.off()
pdf("Robustness_nullprop.pdf",height=3.3,width=6)
print(s_fdp)
dev.off()
141*0.02
141*0.04
141*0.06
141*0.08
141*0.1
beta1
str(Dist0)
library(ape)
library(cubature)
library(foreach)
library(doParallel)
library("doRNG")
library(xtable)
library(tidyverse)
library("MASS")
library(survival)
source("../DART_function.R")
source("../FDRL_function.R")
nsim=200
# function to generate the hypotheses locations
nodes.2D.simu <- function(ntips){
d1 <- rnorm(ntips,0,2)
d2 <- runif(ntips,0,4)
return(cbind(d1,d2))
}
# Generate tree and corresponding aggregation tree
set.seed(123)
ntip=1000;n=300
toy <- nodes.2D.simu(ntip)
ceiling(log(ntip/50,3))
#grids <- c(8,22,56)
#grids <- c(38,58,72)
#grids <- c(22,32,60)
grids <- c(56,96)
snm <- sqrt(n*log(ntip)*log(log(ntip)))
tree <- toy
Dist0 <- Dist <- as.matrix(dist(tree))
#parameters set-up
b11 <- pmax(dnorm(Dist0[156,],0,0.8)*3.4-0.8,0)
b12 <- dnorm(Dist0[7,],0,0.05)*3
b13 <- -dnorm(Dist0[90,],0,0.15)*2
b1 <- (b11+b12)
b1[c(300,200,400,100,500,600,700,800,900,1000)] <- 10
beta1 <- ifelse(abs(b1)>0.15,b1,0)
m1 <- sum(beta1!=0)
indc <- sample(which(beta1!=0),floor(nullprop*m1))
nullprop=0.04
indc <- sample(which(beta1!=0),floor(nullprop*m1))
indc
indc0 <- sample(which(beta1==0),floor(nullprop*m1))
indc0
####### Sensitivity smoothness
load("Out_DART2.RData")
load("Out_FDRL2.RData")
out_FDRL <- out_FDRL%>%mutate(k1=floor(k))%>%
mutate(Test=ifelse(k1==k,"FDRL I","FDRL II"))
#  mutate(Test=ifelse(k1==k,paste0("FDRL I, k=", k1),
#                     paste0("FDRL II, k=", k1)))
out_DART0 <- out_DART
out <- out_DART0%>%filter(Layers!=2)%>%
mutate(Test=ifelse(Layers==1,"BH","DART"))%>%
bind_rows(out_FDRL)%>%
pivot_longer(cols=c("Sensitivity","FDP"))%>%
mutate(nullprop0=nullprop)%>%
mutate(nullprop=paste0("tau*'='*",as.character(nullprop)),aa=paste0("alpha*'='*",alpha))
dummy0 <- out%>%filter(name=="FDP",nullprop0==0)%>%mutate(intercept=alpha)
out0 <- out%>%filter(nullprop0==0)
compares <- ggplot(out0,aes(x=SE, y=value,fill=Test))+
facet_grid(name~aa,labeller = label_parsed,scales="free")+
geom_bar(stat="identity", position=position_dodge()) +
geom_hline(data=dummy0,aes(yintercept=intercept),linetype="dashed")+
theme_classic()+
theme(axis.title.y=element_blank())
dummy <- out%>%filter(name=="FDP",nullprop0!=0)%>%mutate(intercept=alpha)
out_smooth <- out%>%filter(Test%in%c("DART"
,"BH"
,"FDRL II"),nullprop0!=0)
s_fdp=ggplot(out_smooth%>%filter(name=="FDP"),
aes(x=SE, y=value,fill=Test))+
facet_grid(nullprop~aa,labeller = label_parsed)+
geom_bar(stat="identity", position=position_dodge()) +
scale_y_continuous(breaks=c(0.0,0.1,0.2))+
geom_hline(data=dummy,aes(yintercept=intercept),linetype="dashed")+
theme_classic()+
theme(axis.title.y=element_blank())
s_power=ggplot(out_smooth%>%filter(name=="Sensitivity"),
aes(x=SE, y=value,fill=Test))+
facet_grid(nullprop~aa,labeller = label_parsed)+
geom_bar(stat="identity", position=position_dodge()) +
scale_y_continuous(breaks=c(0.0,0.4))+
theme_classic()+
theme(axis.title.y=element_blank())
pdf("Compare.pdf",height=2.5,width=6)
print(compares)
dev.off()
pdf("Robustness_nullprop.pdf",height=3.3,width=6)
print(s_fdp)
dev.off()
